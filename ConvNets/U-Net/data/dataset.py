# -*- coding: utf-8 -*-
"""dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10eJ-mJLTJqOLs1qxh4wmC42GLH1zUhn7
"""

import os
from torch.utils.data import Dataset, DataLoader
from PIL import Image
import numpy as np


class Cityscapes(Dataset):
  def __init__(self, path, kmeans, transform = None, train = True):
    self.root_dir = path
    self.img_path = os.path.join(self.root_dir,'inputs/')
    self.label_path = os.path.join(self.root_dir,'labels/')
    print(self.img_path, self.label_path)
    assert len(os.listdir(self.img_path)) == len(os.listdir(self.label_path))
    self.transform = transform
    self.kmeans = kmeans
    self.train = train   
  def __len__(self):
    return len(os.listdir(self.label_path))
  
  def __getitem__(self, index):
    image = np.array(Image.open(self.img_path + str(index+1) + '.jpg').convert('RGB'))
    label = np.array(Image.open(self.label_path + str(index+1) + '.jpg')) 

    if self.transform is not None:
      augmentation = self.transform(image=image,mask=label)
      image = augmentation['image'].permute(1, 2, 0)
      label = augmentation['mask']
      seg_map = self.kmeans.predict(label.reshape(-1,3)).reshape(256,256)
      return image, seg_map 
